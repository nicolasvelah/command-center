stages:
  - buildForTest
  - test
  - build
  - review
  - staging
  - production

variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

install-dependencies:
  image: cypress/base:10
  stage: buildForTest
  script:
    - npm install
  artifacts:
    expire_in: 1hr
    paths:
      - node_modules/
      - npm ci
      - $(npm bin)/print-env CI
      - npm run cy:verify
  cache:
    paths:
      - node_modules/
  only:
    - branches
  except:
    - master
    - staging

test-apps:
  image: cypress/browsers:chrome67
  stage: test
  script:
    - npm ci
    - npm run test:e2e:ci
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - cypress/screenshots
      - cypress/videos
  only:
    - branches
  except:
    - master
    - staging

build-app:
  image: node:10.14.2
  stage: build
  variables:
    BUILD_CONFIGURATION: 'production'
  dependencies:
    - install-dependencies
  script:
    - npm run build
  artifacts:
    expire_in: 1hr
    paths:
      - public/
  except:
    - master
    - staging

code_quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
  except:
    - master
    - staging

review:
  stage: review
  script:
    - command deploy
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
    on_stop: stop_review
  only:
    - branches
  except:
    - master
    - staging

stop_review:
  stage: review
  variables:
    GIT_STRATEGY: none
  script:
    - command destroy
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - master
    - staging

deploy-staging:
  image: ubuntu:16.04
  stage: staging
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - ssh-add <(echo "MIIEpAIBAAKCAQEAyCcyXqdrnXYq4L5pviAbcSSEOjo5L6TnYKZTvJh/lezHRM9HQIbhnEvQZPCqTcS4YHpvsROo9k/aFC4DLKpvjX+oUCij0VOzViEKGPWwH+ZLXljCDMXDWaarHOEMJzds/E2UkRbuGibOdHwA9Yzo6rP8bOlW15gSG4Zco5LIkjrD93yw4iS1EZRz6cmfnv7/ah+IWP9fbOHdDyHUsecNcYr4yYyBjTxHqf8yeqY5MZ7g0lo/Hd7kDIfixowm9JjiAasilptI5vUNIN7qIAuMM9qkBdeAxhLGR56j3gmB3oQ8htfdPX0+3RXnHtxqW4lcI3fpG/GMAGHjGzuop2XrFQIDAQABAoIBAQCJOwa4C0Ynsgt4CFXr+4uVKZpXafAnkILrq16iYlSn8K43qX6K6W/qf7ikXLYHmCdqTsghuv8P0nQNffbDOyA8/hfizdpz/VVqakDIGDvnwzhNucFijH2CDFop9MsmYEQjQPXp/LTHzW+kQhlOQoy3zyv1aI8YRrWzlY4SwOMwDk9Kg17D/v3E4t0fw0rTuh6f0+u1Z8qsBgwxGhdua23QGECXOZF2Q8zKA6VF6vRWn4p4/oUxE0feR8dKKxKqw2MWIE98oOWQQCeHrAG3Nik7P0QBpgtA/4TE+u1VR0Vg5IHXfCUW0uydtDwxIqusMMDiwCPOscs3n+d5Ei4Gx8RBAoGBAPT98rrvPHHQgT28Te3Dmp9zDWnDYjMSLR4K8FXWrEQlLMrxLk5o221foelio23t4o35AXDpJ8sDZRhTCDI9o6Xaa3e57KyW6OpvFQk4Hi2/Tn5nL5Y48wHjtL7aZy2V7gWMvPp9ctDMmLVx4eDQyQ0ZJhJlK450tX+HMpCUlMmJAoGBANEle9MEV5xqsgz+kdefuaNIuHhjY9Ad8k8yGaHnJLPVdGIOxpeYzM86PRyOIuQMzbGo1bvOXgKi+ZRT5MgSbr8lqxXil/f5ja5EPp5a7rjuTl7KxmzutqeAnju/dRnLcRZaxqScSOXRIX3lo3el0nQ8GKtdVDSeVMgpy5d7MQ4tAoGAZ4H3kMVNC2UlhZjOb/spk95/N0Umcx9l0oCapBmr9KqkLyYRA23H74DtHnbfR62u/37J/hN0DZDkoI9MMjXas1MB/rad6RllVM8T2y5LidZ+6mbcMyLigNTc45nQ5/ClfNDGcyqXXOJkTpzL6zkrCI6siC8YZPqoSDYtxeoQpskCgYBwb1ZB+vOegz10/uYopRWHUnDZR5VBLNg2+xgMkdaJVxdaH9djaCGyxfxUfZUERF3QRJOigy7G/BZwRymW5VHkMLvo6AgKp34jUUzYlMoBYRuAmkJSDYLkSaDHPgYV9+izu9lOZTZLVkJLDEj06ZBaLHSWq3W5U+UANnfc171ngQKBgQDrqYBPK2CmbVfd7pM2XhRUxdhg/LHfw8iUBGoZ6eq5R7VJt2Ha2TwiWpZcCAw5DT3lTJGDG997iBk8fYoWf5ZZ3Mt5X85ZRd6fGyiA9omg2vtTfxbDgZ77JrbYM+Ycf7yvs2wY+6ZmgIsLh5x6fpWPYdBhK4nbElUugo4+7VolJw==")

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
    ## with your own domain name. You can copy and repeat that command if you have
    ## more than one server to connect to.
    ##
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh dev@167.99.173.145
  environment:
    name: staging
    url: https://cc.it-zam.com
  only:
    - staging

deploy-production:
  image: node:10.14.2
  stage: production
  dependencies:
    - build-app
  script:
    - rsync -avuz -e 'ssh -i ~/.ssh/id_rsa' $CI_PROJECT_DIR/public/ dev@167.99.173.145:/var/www/cc
  environment:
    name: production
    url: https://cc.itzam.ec
  only:
    - master
